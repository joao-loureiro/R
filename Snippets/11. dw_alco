#(Instala e) carrega a library de leitura de ficheiros Excel
#install.packages('readxl')
#install.packages('stringr')
require(readxl)
require(readr)
require(dplyr)
require(tidyr)
require(stringr)

#Define a directoria de trabalho
setwd('C://Users//joao.loureiro//Desktop//Warehouse//Macros Pessoais//#R//Projecto')

################################################################
#Selecciona e importa ficheiro de painel e dicionário do painel#
################################################################

#Selecciona e importa ficheiro com dicionário do painel
ficheiro_dicionario_painel <- 'C://Users//joao.loureiro//Desktop//Warehouse//Macros Pessoais//#R//Projecto//households_dictionary.xlsx'
dicionario_painel <- read_excel(ficheiro_dicionario_painel, sheet = 1)

#Renomeia as colunas
names(dicionario_painel) <- c('start','end', 'dimension','code','value')

#Elimina os valores não categóricos da coluna code
dicionario_painel$code[str_detect(dicionario_painel$code,"\\:")] <- NA

#Filtra o início e o fim das mesmas perguntas
filter(dicionario_painel[,c(1:3)], !duplicated.data.frame(dicionario_painel[,1:2])) -> inicio_fim

#Acrescenta a diferença entre o principio e o fim das colunas (caso necessário)
mutate(inicio_fim, tamanho = as.numeric(inicio_fim$end) - as.numeric(inicio_fim$start)+1) -> inicio_fim

#Define o vector tamanho de colunas a partir da coluna tamanho
inicio_fim$tamanho -> tamanho_colunas

#Lê o painel
ficheiro_painel <- 'C://Users//joao.loureiro//Desktop//Warehouse//Macros Pessoais//#R//Projecto//wpanhisc.813'
read_fwf(ficheiro_painel, fwf_positions(as.numeric(inicio_fim$start), as.numeric(inicio_fim$end)), col_types = str_pad("", length(tamanho_colunas), pad = "c"), na = c("", "NA"), skip = 0) -> painel

#Substitui ' por '' nas opções das perguntas
str_replace_all(dicionario_painel$value, '\'', '\'\'') -> dicionario_painel$value

#Dá nomes às colunas
inicio_fim$dimension -> names(painel)

#Converte o painel em csv
write_csv(painel, 'households.csv', na = "")

#Cria texto de criação da base SQL e tabela com o painel
mutate(inicio_fim, sql = paste('[', inicio_fim$dimension, ']', ' ', 'VARCHAR(', inicio_fim$tamanho, '),', sep='')) -> inicio_fim

#Retira a vírgula ao texto sql da última row
inicio_fim$sql[nrow(inicio_fim)] <- str_sub(inicio_fim$sql[nrow(inicio_fim)], end = -2)

#Cria o ficheiro de introdução dos dados no DW
file.create('dw_alco.sql')

#Gera o texto do ficheiro de introdução de dados no DW
write_lines('drop database if exists Projecto;', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('create database Projecto;', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('use Projecto;', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('create schema demogs;', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('create schema purchs;', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('create schema prdcts;', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('create table Projecto.dbo.demographics (', 'dw_alco.sql', sep = '\r\n', append = TRUE)
for (linha in seq_along(inicio_fim$sql)) {
  write_lines(inicio_fim$sql[linha], 'dw_alco.sql', sep = '\r\n', append = TRUE)
}
write_lines(');', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('BULK INSERT Projecto.dbo.demographics', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('FROM \'C:\\Users\\joao.loureiro\\Desktop\\Warehouse\\Macros Pessoais\\#R\\Projecto\\painel_hh.csv\'', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('WITH', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('(', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('FIRSTROW = 2,', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('FIELDTERMINATOR = \',\',', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('ROWTERMINATOR = \'0x0a\',', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('TABLOCK,', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('CODEPAGE = \'ACP\'', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines(');', 'dw_alco.sql', sep = '\r\n', append = TRUE)

#Cria as tabelas-dicionario associadas (juntamente com as de valores não categóricos)
for (i in 1:nrow(inicio_fim)) {
  write_lines(paste('create table Projecto.demogs.[', inicio_fim[i, 3], '] (valor varchar(255), codigo varchar(', inicio_fim[i, 4], '));', sep = ''), 'dw_alco.sql', sep = '\r\n', append = TRUE)
}

#Faz update às tabelas-dicionario associadas com os valores correspondentes
for (i in 1:nrow(dicionario_painel)) {
  #Apaga as tabelas-dicionário de valores não categóricos
  if(is.na(dicionario_painel[i, 4])) {
    write_lines(paste('drop table Projecto.demogs.[', dicionario_painel[i, 3], '];', sep = ''), 'dw_alco.sql', sep = '\r\n', append = TRUE)
  } else {
    write_lines(paste('insert into Projecto.demogs.[', dicionario_painel[i, 3], '] (valor, codigo) values (\'', dicionario_painel[i, 5], '\', \'', dicionario_painel[i, 4], '\');', sep = ''), 'dw_alco.sql', sep = '\r\n', append = TRUE)
  }
}

###################################################################
#Selecciona e importa ficheiro de compras e dicionário das compras#
###################################################################

#Selecciona e importa ficheiro com dicionário das compras
ficheiro_dicionario_compras <- 'C://Users//joao.loureiro//Desktop//Warehouse//Macros Pessoais//#R//Projecto//purchases_dictionary.xlsm'
dicionario_compras <- read_excel(ficheiro_dicionario_compras, sheet = 1)

#Renomeia as colunas
names(dicionario_compras) <- c('start','end', 'dimension','code','value')

#Elimina os valores não categóricos da coluna code
dicionario_compras$code[str_detect(dicionario_compras$code,"\\:")] <- NA

#Filtra o início e o fim das mesmas perguntas
filter(dicionario_compras[,c(1:3)], !duplicated.data.frame(dicionario_compras[,1:2])) -> inicio_fim_compras

#Acrescenta a diferença entre o principio e o fim das colunas (caso necessário)
mutate(inicio_fim_compras, tamanho = as.numeric(inicio_fim_compras$end) - as.numeric(inicio_fim_compras$start)+1) -> inicio_fim_compras

#Define o vector tamanho de colunas a partir da coluna tamanho
inicio_fim_compras$tamanho -> tamanho_colunas_compras

#Lê as compras
ficheiro_compras <- 'C://Users//joao.loureiro//Desktop//Warehouse//Macros Pessoais//#R//Projecto//ALCOD260.902'
read_fwf(ficheiro_compras, fwf_positions(as.numeric(inicio_fim_compras$start), as.numeric(inicio_fim_compras$end)), col_types = str_pad("", length(tamanho_colunas_compras), pad = "c"), na = c("", "NA"), skip = 0) -> compras

#Substitui ' por '' nas opções das perguntas
str_replace_all(dicionario_compras$value, '\'', '\'\'') -> dicionario_compras$value

#Dá nomes às colunas
inicio_fim_compras$dimension -> names(compras)

#Converte o painel em csv
write_csv(compras, 'purchases.csv', na = "")

#Cria texto de criação da base SQL e tabela com o painel
mutate(inicio_fim_compras, sql = paste('[', inicio_fim_compras$dimension, ']', ' ', 'VARCHAR(', inicio_fim_compras$tamanho, '),', sep='')) -> inicio_fim_compras

#Retira a vírgula ao texto sql da última row
inicio_fim_compras$sql[nrow(inicio_fim_compras)] <- str_sub(inicio_fim_compras$sql[nrow(inicio_fim_compras)], end = -2)

#Gera o texto do ficheiro de introdução de dados no DW
write_lines('create table Projecto.dbo.purchases (', 'dw_alco.sql', sep = '\r\n', append = TRUE)
for (linha in seq_along(inicio_fim_compras$sql)) {
  write_lines(inicio_fim_compras$sql[linha], 'dw_alco.sql', sep = '\r\n', append = TRUE)
}
write_lines(');', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('BULK INSERT Projecto.dbo.purchases', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('FROM \'C:\\Users\\joao.loureiro\\Desktop\\Warehouse\\Macros Pessoais\\#R\\Projecto\\compras_hh.csv\'', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('WITH', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('(', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('FIRSTROW = 2,', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('FIELDTERMINATOR = \',\',', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('ROWTERMINATOR = \'0x0a\',', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('TABLOCK,', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('CODEPAGE = \'ACP\'', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines(');', 'dw_alco.sql', sep = '\r\n', append = TRUE)

#Cria as tabelas-dicionario associadas (juntamente com as de valores não categóricos)
for (i in 1:nrow(inicio_fim_compras)) {
  if (inicio_fim_compras[i, 3] %in% c("Product", "Branded/Private Label", "Manufacturer", "Range/Trading Company", "Brand", "Size", "Pack Type", "Long Drinks Sector", "Long Drinks Type",  "A.B.V. Strength",  "Wine Origin", "Total Alcohol Sub Sector", "Report Sector", "Total Volume in Mls", "Unique A.B.V  % Strength")) {
    write_lines(paste('create table Projecto.prdcts.[', inicio_fim_compras[i, 3], '] (valor varchar(255), codigo varchar(', inicio_fim_compras[i, 4], '));', sep = ''), 'dw_alco.sql', sep = '\r\n', append = TRUE)
  } else {
    write_lines(paste('create table Projecto.purchs.[', inicio_fim_compras[i, 3], '] (valor varchar(255), codigo varchar(', inicio_fim_compras[i, 4], '));', sep = ''), 'dw_alco.sql', sep = '\r\n', append = TRUE)
  }
}

#Faz update às tabelas-dicionario associadas com os valores correspondentes
for (i in 1:nrow(dicionario_compras)) {
  #Apaga as tabelas-dicionário de valores não categóricos
  if(is.na(dicionario_compras[i, 4])) {
    write_lines(paste('drop table Projecto.purchs.[', dicionario_compras[i, 3], '];', sep = ''), 'dw_alco.sql', sep = '\r\n', append = TRUE)
  } 
}

########################################
#Selecciona e importa ficheiro de data #
########################################

#Gera o texto do ficheiro de introdução de dados no DW
write_lines('create table Projecto.dbo.date ([Period Key] varchar(7), [Period] tinyint, [Real Date] date);', 'dw_alco.sql', sep = '\r\n', append = TRUE)

write_lines('BULK INSERT Projecto.dbo.date', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('FROM \'C:\\Users\\joao.loureiro\\Desktop\\Warehouse\\Macros Pessoais\\#R\\Projecto\\date.csv\'', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('WITH', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('(', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('FIRSTROW = 2,', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('FIELDTERMINATOR = \',\',', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('ROWTERMINATOR = \'0x0a\',', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('TABLOCK,', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('CODEPAGE = \'ACP\'', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines(');', 'dw_alco.sql', sep = '\r\n', append = TRUE)


###########################################
#Selecciona e importa ficheiro das stores #
###########################################

#Gera o texto do ficheiro de introdução de dados no DW
write_lines('create table Projecto.dbo.stores ([Code] varchar(3), [Category] varchar(50), [Type] varchar(50), [Group] varchar(50), [Store] varchar (50), [Channel] varchar(50), [Country] varchar(50));', 'dw_alco.sql', sep = '\r\n', append = TRUE)

write_lines('BULK INSERT Projecto.dbo.stores', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('FROM \'C:\\Users\\joao.loureiro\\Desktop\\Warehouse\\Macros Pessoais\\#R\\Projecto\\stores.csv\'', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('WITH', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('(', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('FIRSTROW = 2,', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('FIELDTERMINATOR = \',\',', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('ROWTERMINATOR = \'0x0a\',', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('TABLOCK,', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines('CODEPAGE = \'ACP\'', 'dw_alco.sql', sep = '\r\n', append = TRUE)
write_lines(');', 'dw_alco.sql', sep = '\r\n', append = TRUE)
